<?xml version="1.0" encoding="UTF-8" ?>

<section>
    <title>Compound Statements</title>

    <p>
        Negation is a function of one binary variable (that is, we "plug in" one statement).
        Conjunctions and disjunctions are functions of two binary variables (that is, we "plug in" two statements).
        We can compose logical connectives just as we can compose functions to create <term>compound statements</term>.
    </p>

    <p>
        Consider the statement <m>\lnot(p\land q)</m>: "It is not the case that (<m>p</m> and <m>q</m>)."
    </p>

    <table>
        <title>Truth Table for <m>\lnot(p\land q)</m></title>

        <tabular halign="center">
            <row header = "yes" bottom = "minor">
                <cell><m>p</m></cell>
                <cell right="minor"><m>q</m></cell>
                <cell><m>p\land q</m></cell>
                <cell><m>\lnot(p \land q)</m></cell>
            </row>

            <row>
                <cell>T</cell>
                <cell right="minor">T</cell>
                <cell>T</cell>
                <cell>F</cell>
            </row>

            <row>
                <cell>T</cell>
                <cell right="minor">F</cell>
                <cell>F</cell>
                <cell>T</cell>
            </row>

            <row>
                <cell>F</cell>
                <cell right="minor">T</cell>
                <cell>F</cell>
                <cell>T</cell>
            </row>

            <row>
                <cell>F</cell>
                <cell right="minor">F</cell>
                <cell>F</cell>
                <cell>T</cell>
            </row>
        </tabular>
    </table>

    <p>
        For the statement <m>\lnot(p\land q)</m> to be true, we see that we need one of <m>p</m> or <m>q</m> to be false (not necessarily both).
        That is, the truth value should match the truth value of the compound statement <m>(\lnot p) \lor (\lnot q)</m>.
        To verify this, we look at the truth table for the statement <m>(\lnot p) \lor (\lnot q)</m>: "(Not <m>p</m>) or (not <m>q</m>)."
    </p>

    <table>
        <title>Truth Table for <m>(\lnot p) \lor (\lnot q)</m></title>

        <tabular halign="center">
            <row header = "yes" bottom = "minor">
                <cell><m>p</m></cell>
                <cell right="minor"><m>q</m></cell>
                <cell><m>\lnot p</m></cell>
                <cell><m>\lnot q</m></cell>
                <cell><m>(\lnot p)\lor (\lnot q)</m></cell>
            </row>

            <row>
                <cell>T</cell>
                <cell right="minor">T</cell>
                <cell>F</cell>
                <cell>F</cell>
                <cell>F</cell>
            </row>

            <row>
                <cell>T</cell>
                <cell right="minor">F</cell>
                <cell>F</cell>
                <cell>T</cell>
                <cell>T</cell>
            </row>

            <row>
                <cell>F</cell>
                <cell right="minor">T</cell>
                <cell>T</cell>
                <cell>F</cell>
                <cell>T</cell>
            </row>

            <row>
                <cell>F</cell>
                <cell right="minor">F</cell>
                <cell>T</cell>
                <cell>T</cell>
                <cell>T</cell>
            </row>
        </tabular>
    </table>

    <p>
        We can see from the final column of these truth tables that the statements <m>\lnot(p \land q)</m> and <m>(\lnot p)\lor (\lnot q)</m> correspond to the same function of <m>p</m> and <m>q</m>.
    </p>

    <definition xml:id="def-equivalence">
        <notation>
            <usage><m>\equiv</m></usage>
            <description>
                logical equivalence
            </description>
        </notation>

        <statement>
            <p>
                In general, a <term>compound statement</term> is a complex statement built from simple statements <m>p</m>, <m>q</m>, and so on.
                We typically reserve the capital letters <m>P</m>, <m>Q</m>, <m>R</m> (and so on) to denote compound statements.
                Two compound statements <m>P</m> and <m>Q</m> (made up of the same constituent statements) are <term>logically equivalent</term> provided their truth tables have the same final column.
                We denote this equivalence <m>P \equiv Q</m>.
            </p>
        </statement>
    </definition>

    <p>
        Logical equivalence allows us to manipulate compound statements without changing their truth tables.
        This helps us determine how to negate compound statements.
    </p>

    <theorem xml:id="thm-de-Morgan">
        <title>De Morgan's Laws</title>

        <statement>
            <p>
                For any statements <m>p</m> and <m>q</m>,
                <ol>
                    <li>
                        <p>
                            <m>\lnot (p \land q) \equiv (\lnot p) \lor (\lnot q)</m>, and
                        </p>
                    </li>

                    <li>
                        <p>
                            <m>\lnot(p \lor q) \equiv (\lnot p) \land (\lnot q)</m>.
                        </p>
                    </li>
                </ol>
            </p>
        </statement>
    </theorem>

    <theorem xml:id="thm-double-neg">
        <title>The Law of the Double Negative</title>

        <statement>
            <p>
                For any statement <m>p</m>,
                <me>
                    \lnot(\lnot p) \equiv p.
                </me>
            </p>
        </statement>
    </theorem>
</section>
